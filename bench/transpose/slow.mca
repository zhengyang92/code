Iterations:        100
Instructions:      8900
Total Cycles:      3210
Total uOps:        10300

Dispatch Width:    6
uOps Per Cycle:    3.21
IPC:               2.77
Block RThroughput: 22.0


Instruction Info:
[1]: #uOps
[2]: Latency
[3]: RThroughput
[4]: MayLoad
[5]: MayStore
[6]: HasSideEffects (U)

[1]    [2]    [3]    [4]    [5]    [6]    Instructions:
 3      2     1.00           *            pushq	%rbp
 3      2     1.00           *            pushq	%r15
 3      2     1.00           *            pushq	%r14
 3      2     1.00           *            pushq	%rbx
 1      1     0.25                        cmpl	$2, %esi
 1      1     0.50                        jl	.LBB0_10
 1      1     0.25                        decl	%esi
 1      1     0.50                        leaq	1796(%rdi), %r8
 1      1     0.50                        leaq	284(%rdi), %rcx
 1      1     0.50                        leaq	256(%rdi), %r10
 1      1     0.50                        leaq	4(%rdi), %r11
 1      0     0.17                        xorl	%r9d, %r9d
 1      1     0.25                        movl	$1, %r14d
 1      1     0.50                        jmp	.LBB0_2
 1      1     0.25                        addq	$4, %r8
 1      1     0.25                        addq	$256, %rcx
 1      1     0.25                        incl	%r14d
 1      1     0.25                        addq	$256, %r10
 1      1     0.25                        addq	$4, %r11
 1      1     0.25                        cmpl	%esi, %r9d
 1      1     0.50                        je	.LBB0_10
 1      1     0.25                        movl	%r9d, %eax
 1      1     0.50                        leal	1(%rax), %r9d
 1      1     0.25                        cmpl	$7, %eax
 1      1     0.50                        jae	.LBB0_4
 1      0     0.17                        xorl	%edx, %edx
 1      1     0.50                        jmp	.LBB0_6
 1      1     0.25                        movl	%r14d, %eax
 1      1     0.25                        andl	$-8, %eax
 1      1     0.25                        movq	%r8, %rbx
 1      0     0.17                        xorl	%edx, %edx
 1      5     0.50    *                   movl	-1792(%rbx), %edi
 1      5     0.50    *                   movl	-28(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -1792(%rbx)
 1      1     1.00           *            movl	%edi, -28(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-1536(%rbx), %edi
 1      5     0.50    *                   movl	-24(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -1536(%rbx)
 1      1     1.00           *            movl	%edi, -24(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-1280(%rbx), %edi
 1      5     0.50    *                   movl	-20(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -1280(%rbx)
 1      1     1.00           *            movl	%edi, -20(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-1024(%rbx), %edi
 1      5     0.50    *                   movl	-16(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -1024(%rbx)
 1      1     1.00           *            movl	%edi, -16(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-768(%rbx), %edi
 1      5     0.50    *                   movl	-12(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -768(%rbx)
 1      1     1.00           *            movl	%edi, -12(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-512(%rbx), %edi
 1      5     0.50    *                   movl	-8(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -512(%rbx)
 1      1     1.00           *            movl	%edi, -8(%rcx,%rdx,4)
 1      5     0.50    *                   movl	-256(%rbx), %edi
 1      5     0.50    *                   movl	-4(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, -256(%rbx)
 1      1     1.00           *            movl	%edi, -4(%rcx,%rdx,4)
 1      5     0.50    *                   movl	(%rbx), %edi
 1      5     0.50    *                   movl	(%rcx,%rdx,4), %ebp
 1      1     1.00           *            movl	%ebp, (%rbx)
 1      1     1.00           *            movl	%edi, (%rcx,%rdx,4)
 1      1     0.25                        addq	$8, %rdx
 1      1     0.25                        addq	$2048, %rbx
 1      1     0.25                        cmpl	%edx, %eax
 1      1     0.50                        jne	.LBB0_5
 1      1     0.25                        testb	$7, %r9b
 1      1     0.50                        je	.LBB0_9
 1      1     0.25                        movl	%r14d, %r15d
 1      1     0.25                        andl	$7, %r15d
 1      1     0.50                        leaq	(%r10,%rdx,4), %rbx
 1      1     0.50                        shlq	$8, %rdx
 1      1     0.25                        addq	%r11, %rdx
 1      0     0.17                        xorl	%edi, %edi
 1      5     0.50    *                   movl	(%rdx), %ebp
 1      5     0.50    *                   movl	(%rbx,%rdi,4), %eax
 1      1     1.00           *            movl	%eax, (%rdx)
 1      1     1.00           *            movl	%ebp, (%rbx,%rdi,4)
 1      1     0.25                        incq	%rdi
 1      1     0.25                        addq	$256, %rdx
 1      1     0.25                        cmpl	%edi, %r15d
 1      1     0.50                        jne	.LBB0_8
 1      1     0.50                        jmp	.LBB0_9
 2      6     0.50    *                   popq	%rbx
 2      6     0.50    *                   popq	%r14
 2      6     0.50    *                   popq	%r15
 2      6     0.50    *                   popq	%rbp
 3      7     1.00                  U     retq


Resources:
[0]   - SKXDivider
[1]   - SKXFPDivider
[2]   - SKXPort0
[3]   - SKXPort1
[4]   - SKXPort2
[5]   - SKXPort3
[6]   - SKXPort4
[7]   - SKXPort5
[8]   - SKXPort6
[9]   - SKXPort7


Resource pressure per iteration:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    
 -      -     12.02  12.49  15.03  15.05  22.00  12.50  12.99  14.92  

Resource pressure by instruction:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    Instructions:
 -      -      -     0.95   0.01    -     1.00   0.03   0.02   0.99   pushq	%rbp
 -      -     0.95   0.02    -     0.97   1.00   0.01   0.02   0.03   pushq	%r15
 -      -     0.98    -     0.97   0.02   1.00    -     0.02   0.01   pushq	%r14
 -      -     0.96   0.01   0.01    -     1.00    -     0.03   0.99   pushq	%rbx
 -      -     0.01   0.03    -      -      -     0.96    -      -     cmpl	$2, %esi
 -      -     0.03    -      -      -      -      -     0.97    -     jl	.LBB0_10
 -      -     0.03   0.02    -      -      -     0.95    -      -     decl	%esi
 -      -      -     0.95    -      -      -     0.05    -      -     leaq	1796(%rdi), %r8
 -      -      -     0.52    -      -      -     0.48    -      -     leaq	284(%rdi), %rcx
 -      -      -     0.48    -      -      -     0.52    -      -     leaq	256(%rdi), %r10
 -      -      -     0.52    -      -      -     0.48    -      -     leaq	4(%rdi), %r11
 -      -      -      -      -      -      -      -      -      -     xorl	%r9d, %r9d
 -      -     0.03    -      -      -      -      -     0.97    -     movl	$1, %r14d
 -      -     0.02    -      -      -      -      -     0.98    -     jmp	.LBB0_2
 -      -      -      -      -      -      -     0.99   0.01    -     addq	$4, %r8
 -      -      -     0.99    -      -      -     0.01    -      -     addq	$256, %rcx
 -      -     0.02   0.01    -      -      -     0.01   0.96    -     incl	%r14d
 -      -     0.01   0.01    -      -      -     0.96   0.02    -     addq	$256, %r10
 -      -     0.01   0.96    -      -      -     0.03    -      -     addq	$4, %r11
 -      -     0.96   0.03    -      -      -      -     0.01    -     cmpl	%esi, %r9d
 -      -     0.98    -      -      -      -      -     0.02    -     je	.LBB0_10
 -      -     0.03    -      -      -      -     0.01   0.96    -     movl	%r9d, %eax
 -      -      -     0.48    -      -      -     0.52    -      -     leal	1(%rax), %r9d
 -      -     0.01   0.51    -      -      -     0.48    -      -     cmpl	$7, %eax
 -      -     0.98    -      -      -      -      -     0.02    -     jae	.LBB0_4
 -      -      -      -      -      -      -      -      -      -     xorl	%edx, %edx
 -      -     0.02    -      -      -      -      -     0.98    -     jmp	.LBB0_6
 -      -      -      -      -      -      -     1.00    -      -     movl	%r14d, %eax
 -      -     0.01   0.03    -      -      -      -     0.96    -     andl	$-8, %eax
 -      -     0.01   0.98    -      -      -      -     0.01    -     movq	%r8, %rbx
 -      -      -      -      -      -      -      -      -      -     xorl	%edx, %edx
 -      -      -      -     0.96   0.04    -      -      -      -     movl	-1792(%rbx), %edi
 -      -      -      -     0.97   0.03    -      -      -      -     movl	-28(%rcx,%rdx,4), %ebp
 -      -      -      -      -     0.97   1.00    -      -     0.03   movl	%ebp, -1792(%rbx)
 -      -      -      -     0.01    -     1.00    -      -     0.99   movl	%edi, -28(%rcx,%rdx,4)
 -      -      -      -     0.04   0.96    -      -      -      -     movl	-1536(%rbx), %edi
 -      -      -      -     0.03   0.97    -      -      -      -     movl	-24(%rcx,%rdx,4), %ebp
 -      -      -      -      -     0.97   1.00    -      -     0.03   movl	%ebp, -1536(%rbx)
 -      -      -      -     0.97   0.01   1.00    -      -     0.02   movl	%edi, -24(%rcx,%rdx,4)
 -      -      -      -     0.01   0.99    -      -      -      -     movl	-1280(%rbx), %edi
 -      -      -      -     1.00    -      -      -      -      -     movl	-20(%rcx,%rdx,4), %ebp
 -      -      -      -     0.01    -     1.00    -      -     0.99   movl	%ebp, -1280(%rbx)
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   movl	%edi, -20(%rcx,%rdx,4)
 -      -      -      -      -     1.00    -      -      -      -     movl	-1024(%rbx), %edi
 -      -      -      -     1.00    -      -      -      -      -     movl	-16(%rcx,%rdx,4), %ebp
 -      -      -      -     0.02   0.01   1.00    -      -     0.97   movl	%ebp, -1024(%rbx)
 -      -      -      -     0.01    -     1.00    -      -     0.99   movl	%edi, -16(%rcx,%rdx,4)
 -      -      -      -      -     1.00    -      -      -      -     movl	-768(%rbx), %edi
 -      -      -      -     1.00    -      -      -      -      -     movl	-12(%rcx,%rdx,4), %ebp
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   movl	%ebp, -768(%rbx)
 -      -      -      -     0.02   0.01   1.00    -      -     0.97   movl	%edi, -12(%rcx,%rdx,4)
 -      -      -      -     0.02   0.98    -      -      -      -     movl	-512(%rbx), %edi
 -      -      -      -     0.98   0.02    -      -      -      -     movl	-8(%rcx,%rdx,4), %ebp
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   movl	%ebp, -512(%rbx)
 -      -      -      -     0.01   0.02   1.00    -      -     0.97   movl	%edi, -8(%rcx,%rdx,4)
 -      -      -      -     0.02   0.98    -      -      -      -     movl	-256(%rbx), %edi
 -      -      -      -     0.98   0.02    -      -      -      -     movl	-4(%rcx,%rdx,4), %ebp
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   movl	%ebp, -256(%rbx)
 -      -      -      -     0.01    -     1.00    -      -     0.99   movl	%edi, -4(%rcx,%rdx,4)
 -      -      -      -     0.02   0.98    -      -      -      -     movl	(%rbx), %edi
 -      -      -      -     0.02   0.98    -      -      -      -     movl	(%rcx,%rdx,4), %ebp
 -      -      -      -     0.01   0.96   1.00    -      -     0.03   movl	%ebp, (%rbx)
 -      -      -      -     0.96   0.01   1.00    -      -     0.03   movl	%edi, (%rcx,%rdx,4)
 -      -      -     0.96    -      -      -     0.02   0.02    -     addq	$8, %rdx
 -      -     0.96   0.03    -      -      -     0.01    -      -     addq	$2048, %rbx
 -      -     0.02   0.01    -      -      -     0.96   0.01    -     cmpl	%edx, %eax
 -      -     0.04    -      -      -      -      -     0.96    -     jne	.LBB0_5
 -      -     0.01   0.96    -      -      -     0.01   0.02    -     testb	$7, %r9b
 -      -     0.96    -      -      -      -      -     0.04    -     je	.LBB0_9
 -      -     0.96   0.01    -      -      -     0.02   0.01    -     movl	%r14d, %r15d
 -      -      -      -      -      -      -     1.00    -      -     andl	$7, %r15d
 -      -      -     1.00    -      -      -      -      -      -     leaq	(%r10,%rdx,4), %rbx
 -      -     0.04    -      -      -      -      -     0.96    -     shlq	$8, %rdx
 -      -      -     0.01    -      -      -     0.99    -      -     addq	%r11, %rdx
 -      -      -      -      -      -      -      -      -      -     xorl	%edi, %edi
 -      -      -      -     1.00    -      -      -      -      -     movl	(%rdx), %ebp
 -      -      -      -     0.03   0.97    -      -      -      -     movl	(%rbx,%rdi,4), %eax
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   movl	%eax, (%rdx)
 -      -      -      -     0.01    -     1.00    -      -     0.99   movl	%ebp, (%rbx,%rdi,4)
 -      -     0.01   0.97    -      -      -     0.02    -      -     incq	%rdi
 -      -      -     0.02    -      -      -     0.02   0.96    -     addq	$256, %rdx
 -      -     0.01    -      -      -      -     0.97   0.02    -     cmpl	%edi, %r15d
 -      -     0.98    -      -      -      -      -     0.02    -     jne	.LBB0_8
 -      -      -      -      -      -      -      -     1.00    -     jmp	.LBB0_9
 -      -     0.96   0.01   0.97   0.03    -     0.03    -      -     popq	%rbx
 -      -     0.01   0.02   0.97   0.03    -     0.96   0.01    -     popq	%r14
 -      -     0.02    -     0.97   0.03    -      -     0.98    -     popq	%r15
 -      -     0.97   0.01   0.96   0.04    -      -     0.02    -     popq	%rbp
 -      -     0.02   0.98    -     1.00    -      -     1.00    -     retq
